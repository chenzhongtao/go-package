package main

import (
	"fmt"
	"unsafe"
)

type Person struct {
	name string //姓名
	age  uint32 //年龄

}

func main() {
	p := &Person{name: "chenghan", age: 22}
	size := unsafe.Sizeof(*p)
	//	fmt.Println(unsafe.Sizeof(p.name))
	fmt.Println("结构体的大小：", size)

	by := (*[1024]byte)(unsafe.Pointer(p))
	fmt.Printf("by:%+v\n", by)
	fmt.Printf("unsafe取址：%p\n", unsafe.Pointer(p))
	fmt.Printf("结构体取址:%p\n", p)
	p1 := (*Person)(unsafe.Pointer(p))
	p2 := (*Person)(unsafe.Pointer(by))
	fmt.Println(p1.age)
	fmt.Println(p2.age)
	//偏移量取值
	fmt.Println("nameSize：", unsafe.Sizeof(p.name))
	fmt.Println("ageSize：", unsafe.Sizeof(p.age))
	fmt.Println("nameAlignof：", unsafe.Alignof(p.name))
	fmt.Println("ageAlignof：", unsafe.Alignof(p.age))
	fmt.Println("name偏移量：", unsafe.Offsetof(p.name))
	fmt.Println("age偏移量：", unsafe.Offsetof(p.age))
	fmt.Println("name:", *(*string)(unsafe.Pointer(p)))
	fmt.Println("age:", *(*uint32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + unsafe.Offsetof(p.age))))

}

/*
output:
结构体的大小： 24
by:&[192 113 81 0 0 0 0 0 8 0 0 0 0 0 0 0 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 98 121 58 38 91 49 57 50 32 49 49 51 32 56 49 32 48 32 48 32 48 32 48 32 48 32 56 32 48 32 48 32 96 67 0 130 192 0 0 0 64 100 81 0 0 0 0 0 9 0 0 0 0 0 0 0 160 53 238 118 0 0 0 0 128 128 4 130 192 0 0 0 0 4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 129 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 64 129 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 96 129 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 128 129 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 160 129 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 192 129 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 224 129 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 130 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 130 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 64 130 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 96 130 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 128 130 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 160 130 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 192 130 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 224 130 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 131 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 131 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 64 131 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 96 131 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 128 131 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 160 131 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 192 131 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 224 131 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 132 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 132 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 64 132 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 96 132 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 128 132 4 130 192 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
unsafe取址：0xc082048080
结构体取址:0xc082048080
22
22
nameSize： 16
ageSize： 4
nameAlignof： 8
ageAlignof： 4
name偏移量： 0
age偏移量： 16
name: chenghan
age: 22
*/
